apiVersion: apps/v1
kind: Deployment
metadata:
  name: radius-testenv
  labels:
    app: radius-testenv
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radius-testenv
  template:
    metadata:
      name: radius-testenv
      labels:
        app: radius-testenv
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: NotIn
                    values:
                      - k8s-1
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - radius-testenv
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: radius-testenv
          image: docker.io/freeradius/freeradius-server:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "5000m"
              memory: "4G"
          ports:
            - containerPort: 1812
              hostPort: 1812
              protocol: UDP
            - containerPort: 1813
              hostPort: 1813
              protocol: UDP
#          command:
#            - "freeradius"
#            - "-X"
          volumeMounts:
            - mountPath: /etc/raddb/clients.conf
              name: client-conf
              subPath: clients.conf
            - mountPath: /etc/raddb/users
              name: users-conf
              subPath: users.conf
      volumes:
        - name: client-conf
          configMap:
            name: radius-config
            items:
              - key: clients.conf
                path: clients.conf
        - name: users-conf
          configMap:
            name: radius-config
            items:
              - key: users.conf
                path: users.conf

      restartPolicy: Always
